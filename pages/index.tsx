import type { NextPage } from 'next'
import {
  WalletDisconnectButton,
  WalletMultiButton,
} from '@solana/wallet-adapter-react-ui'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useConnection, useWallet } from '@solana/wallet-adapter-react'
import { useEffect, useState } from 'react'
import { TOKEN_PROGRAM_ID } from '@solana/spl-token'
import { TableSwitch } from '../components/TableSwitch'
import { TableMenu, TableMenuItem } from '../components/TableMenu'
import { TableRow } from '../components/TableRow'
import { TableCell } from '../components/TableCell'
import { Button } from '../components/Button'
import { ProgressBar } from '../components/ProgressBar'

const Home: NextPage = () => {
  const { connection } = useConnection()
  const [tokenAccountsInfo, setTokenAccountsInfo] = useState<any[]>()
  const { publicKey } = useWallet()
  const [isActive, setIsActive] = useState(true)

  let tableMenuItems: TableMenuItem[] = [
    {
      label: 'Name',
      icon: 'bar',
    },
    {
      label: 'Amount',
      icon: 'link',
      align: 'end',
    },
    {
      label: 'Date',
      icon: 'calendar',
    },
    {
      label: 'Action',
      isInvisible: true,
    },
  ]

  useEffect(() => {
    if (publicKey) {
      connection
        .getParsedTokenAccountsByOwner(publicKey, {
          programId: TOKEN_PROGRAM_ID,
        })
        .then((res) => {
          const parsedTokenAccountsInfo = res.value.map(
            (tokenAccount) => tokenAccount.account.data.parsed.info
          )
          setTokenAccountsInfo(parsedTokenAccountsInfo)
        })
    }
  }, [publicKey, connection])

  const handleTableSwitch = () => {
    setIsActive(!isActive)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&display=swap"
          rel="stylesheet"
        />
      </Head>

      <main className={styles.main + ' bg-gray-200 font-mono'}>
        <div className={styles.walletButtons}>
          <WalletMultiButton />
          <WalletDisconnectButton />
        </div>
        <div>
          <TableSwitch
            isActive={isActive}
            label="Investments"
            onClick={handleTableSwitch}
          />
          <table>
            <TableMenu items={tableMenuItems} />
            <tbody>
              {tokenAccountsInfo?.map((accountInfo) => {
                return (
                  <TableRow key={accountInfo.mint}>
                    <TableCell>{accountInfo.mint}</TableCell>
                    <TableCell align="right">
                      {accountInfo.tokenAmount.uiAmountString}
                    </TableCell>
                    <TableCell>2022-01-01</TableCell>
                    <TableCell>
                      <ProgressBar value={30} />
                    </TableCell>
                  </TableRow>
                )
              })}
            </tbody>
          </table>
        </div>
      </main>
    </div>
  )
}

export default Home
